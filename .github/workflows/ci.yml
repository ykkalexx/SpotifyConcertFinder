name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: alexandru123
          MYSQL_DATABASE: spotify_concert
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: |
            src/server/package-lock.json
            src/discord-bot/package-lock.json

      - name: Install Server Dependencies
        working-directory: ./src/server
        run: npm ci

      - name: Install Bot Dependencies
        working-directory: ./src/discord-bot
        run: npm ci

      - name: Setup Test DB
        working-directory: ./src/server
        run: |
          cp .env.example .env
          npm run migrate

      - name: Run Tests
        working-directory: ./src/server
        env:
          DB_HOST: localhost
          DB_USER: root
          DB_PASSWORD: alexandru123
          DB_NAME: spotify_concert
          NODE_ENV: test
          SPOTIFY_CLIENT_ID: test-client-id
          SPOTIFY_CLIENT_SECRET: test-client-secret
          TICKETMASTER_API_KEY: test-api-key
        run: npm test -- --coverage

      - name: TypeScript Check
        working-directory: ./src/server
        run: npm run build

      - name: Upload Coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: ./src/server/coverage
