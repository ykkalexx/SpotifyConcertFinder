name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: alexandru123
          MYSQL_DATABASE: spotify_concert
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Setup Server Environment
        working-directory: ./src/server
        run: |
          cp .env.example .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_USER=root" >> .env
          echo "DB_PASSWORD=alexandru123" >> .env
          echo "DB_NAME=spotify_concert" >> .env
          echo "NODE_ENV=test" >> .env
          echo "SPOTIFY_CLIENT_ID=test-client-id" >> .env
          echo "SPOTIFY_CLIENT_SECRET=test-client-secret" >> .env
          echo "TICKETMASTER_API_KEY=test-api-key" >> .env

      - name: Setup Discord Bot Environment
        working-directory: ./src/discord-bot
        run: |
          cp .env.example .env
          echo "DISCORD_TOKEN=test-token" >> .env
          echo "CLIENT_ID=test-client-id" >> .env
          echo "BACKEND_URL=http://localhost:3000/api/v1" >> .env

      - name: Install Server Dependencies
        working-directory: ./src/server
        run: npm ci

      - name: Install Bot Dependencies
        working-directory: ./src/discord-bot
        run: npm ci

      - name: Run Server Tests
        working-directory: ./src/server
        run: npm test -- --coverage

      - name: Run TypeScript Checks
        run: |
          cd src/server && npm run build
          cd ../discord-bot && npm run build

      - name: Upload Coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: ./src/server/coverage
